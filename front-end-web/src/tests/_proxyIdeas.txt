    "start:react:proxy-server": "yarn tsnode environment/testServer.ts"
    "start": "react-scripts start concurrently yarn:start:react:proxy-server",
"devDependencies": {
    "@types/http-proxy-middleware": "0.19.3"
  },

  setupProxy.js
  const {createProxyMiddleware} = require("http-proxy-middleware");
require("dotenv").config();

module.exports = function (app) {
  app.use(
    createProxyMiddleware(["/all_books", "/login/submit"], {
      target: `http://localhost:5000`,
      changeOrigin: true,
      logLevel: "debug",
    })
  );
};

testServer.ts
import path from "path";
import express from "express";
import history from "connect-history-api-fallback";
import setupProxy from "./setupProxy";

const app = express();

setupProxy(app);

app.use(history());
app.use(express.static(path.join(__dirname, "../build")));

app.listen(3000);

react-app-env.d.ts
/// <reference types="react-scripts" />

tsconfig.json
{
  "compilerOptions": {
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx"
  },
  "include": [
    "src"
  ]
}